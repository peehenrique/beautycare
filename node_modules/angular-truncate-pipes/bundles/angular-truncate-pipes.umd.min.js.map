{"version":3,"file":"angular-truncate-pipes.umd.min.js","sources":["../../src/pipes/words.pipe.ts","../../src/pipes/splitcharacters.pipe.ts","../../src/pipes/characters.pipe.ts","../../src/modules/truncate-pipes.module.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\nexport class WordsPipe implements PipeTransform {\n/**\n * @param {?} value\n * @param {?=} args\n * @return {?}\n */\ntransform(value: string, args: number = 4): string {\n    let /** @type {?} */ res = value;\n    if (value && args > 0) {\n      const /** @type {?} */ valueWords = value.split(/\\s+/);\n      if (valueWords.length > args) {\n        res = valueWords.slice(0, args).join(' ') + 'â€¦';\n      }\n    }\n    return res;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n  name: 'words'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction WordsPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nWordsPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nWordsPipe.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nexport class SplitcharactersPipe implements PipeTransform {\n/**\n * @param {?} value\n * @param {?=} args\n * @return {?}\n */\ntransform(value: string, args: number = 10): string {\n    let /** @type {?} */ res = value;\n    if (value && value.length > args && args > 0) {\n      const /** @type {?} */ prefix = value.substring(0, args / 2);\n      const /** @type {?} */ postfix = value.substring(value.length - args / 2, value.length);\n      res = `${prefix}...${postfix}`;\n    }\n    return res;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n  name: 'splitcharacters'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction SplitcharactersPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nSplitcharactersPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSplitcharactersPipe.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nexport class CharactersPipe implements PipeTransform {\n/**\n * @param {?} value\n * @param {?=} args\n * @param {?=} breakOnWord\n * @return {?}\n */\ntransform(value: string, args: number = 10, breakOnWord?: boolean): string {\n    let /** @type {?} */ res = value;\n    if (value && value.length > args && args > 0) {\n      value = value.substring(0, args);\n\n      if (breakOnWord) {\n        while (value.charAt(value.length - 1) === ' ') {\n          value = value.substr(0, value.length - 1);\n        }\n      } else {\n        const /** @type {?} */ lastspace = value.lastIndexOf(' ');\n        // get last space\n        if (lastspace !== -1) {\n          value = value.substr(0, lastspace);\n        }\n      }\n      res = `${value}...`;\n    }\n    return res;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n  name: 'characters'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction CharactersPipe_tsickle_Closure_declarations() {\n/** @type {?} */\nCharactersPipe.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCharactersPipe.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { WordsPipe } from './../pipes/words.pipe';\nimport { SplitcharactersPipe } from './../pipes/splitcharacters.pipe';\nimport { CharactersPipe } from './../pipes/characters.pipe';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nexport class TruncatePipesModule {\n/**\n * Use in AppModule\n * @return {?}\n */\npublic static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: TruncatePipesModule,\n            providers: []\n        };\n    }\n/**\n * Use in features modules with lazy loading\n * @return {?}\n */\npublic static forChild(): ModuleWithProviders {\n        return {\n            ngModule: TruncatePipesModule,\n            providers: []\n        };\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    declarations: [\n        CharactersPipe,\n        SplitcharactersPipe,\n        WordsPipe\n        // Pipes.\n        // Directives.\n    ],\n    exports: [\n        CharactersPipe,\n        SplitcharactersPipe,\n        WordsPipe\n        // Pipes.\n        // Directives.\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction TruncatePipesModule_tsickle_Closure_declarations() {\n/** @type {?} */\nTruncatePipesModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTruncatePipesModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["WordsPipe","prototype","transform","value","args","res","valueWords","split","length","slice","join","decorators","type","Pipe","name","ctorParameters","SplitcharactersPipe","substring","CharactersPipe","breakOnWord","charAt","substr","lastspace","lastIndexOf","TruncatePipesModule","forRoot","ngModule","providers","forChild","NgModule","declarations","exports"],"mappings":"iXACA,IAAAA,WAAA,WAAA,QAAAA,oBAMAA,WAAAC,UAAAC,UAAA,SAHGC,MAAAC,UAAH,KAAAA,OAAGA,KAAH,EAII,IAHIC,KAAMF,KAIV,IAAIA,OAHSC,KAAO,EAAG,CAIrB,GAHME,YAAaH,MAAMI,MAAM,MAI3BD,YAHWE,OAASJ,OAItBC,IAHMC,WAAWG,MAAM,EAAGL,MAAMM,KAAK,KAAO,KAMhD,MAHOL,kBAEJL,WAAPW,aACEC,KAAMC,cAGRA,KAHcT,OAIZU,KAHM,YAIPd,UAADe,eAAC,WAAA,SCnBD,IAAAC,qBAAA,WAAA,QAAAA,8BAMAA,qBAAAf,UAAAC,UAAA,SAHGC,MAAAC,UAAH,KAAAA,OAAGA,KAAH,GAII,IAHIC,KAAMF,KAIV,IAAIA,OAHSA,MAAMK,OAASJ,MAAQA,KAAO,EAAG,CAM5CC,IALeF,MAAMc,UAAU,EAAGb,KAAO,GAK/C,MAJsBD,MAAMc,UAAUd,MAAMK,OAASJ,KAAO,EAAGD,MAAMK,QAMjE,MAHOH,4BAEJW,qBAAPL,aACEC,KAAMC,cAGRA,KAHcT,OAIZU,KAHM,sBAIPE,oBAADD,eAAC,WAAA,SClBD,IAAAG,gBAAA,WAAA,QAAAA,yBAOAA,gBAAAjB,UAAAC,UAAA,SAJGC,MAAAC,KAAAe,iBAAH,KAAAf,OAAGA,KAAH,GAKI,IAJIC,KAAMF,KAKV,IAAIA,OAJSA,MAAMK,OAASJ,MAAQA,KAAO,EAAG,CAO5C,GAFAD,MAJQA,MAAMc,UAAU,EAAGb,MAMvBe,YACF,KAJ0C,MAInChB,MAJMiB,OAAOjB,MAAMK,OAAS,IAKjCL,MAJQA,MAAMkB,OAAO,EAAGlB,MAAMK,OAAS,OAEpC,CAKL,GAJMc,WAAYnB,MAAMoB,YAAY,MAElB,IAIdD,YACFnB,MAJQA,MAAMkB,OAAO,EAAGC,YAO5BjB,IAJMF,MAIZ,MAEI,MAJOE,uBAEJa,gBAAPP,aACEC,KAAMC,cAIRA,KAJcT,OAKZU,KAJM,iBAIPI,eAADH,eAAC,WAAA,SC1BD,IAAAS,qBAAA,WAAA,QAAAA,8BAOKA,qBAALC,QAAK,WADG,OACIC,SAEUF,oBADVG,eASPH,oBAALI,SAAK,WADG,OACIF,SAEUF,oBADVG,qCAMLH,qBAAPb,aACEC,KAAMiB,cAFRA,SAEkBzB,OADd0B,cACIZ,eACAF,oBACAhB,WAIJ+B,SACIb,eACAF,oBACAhB,eASPwB,oBAADT,eAAC,WAAA"}